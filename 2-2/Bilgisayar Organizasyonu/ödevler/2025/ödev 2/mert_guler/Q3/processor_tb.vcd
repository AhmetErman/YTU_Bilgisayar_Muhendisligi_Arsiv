$date
	Mon May  5 13:47:03 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module processor_tb $end
$scope module processor $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 32 # instruction [31:0] $end
$var wire 1 $ Zero $end
$var wire 32 % WriteData [31:0] $end
$var wire 32 & SrcB [31:0] $end
$var wire 32 ' SrcA [31:0] $end
$var wire 2 ( ResultSrc [1:0] $end
$var wire 32 ) Result [31:0] $end
$var wire 1 * RegWrite $end
$var wire 32 + ReadData [31:0] $end
$var wire 32 , PCTarget [31:0] $end
$var wire 1 - PCSrc $end
$var wire 32 . PCPlus4 [31:0] $end
$var wire 32 / PCNext [31:0] $end
$var wire 32 0 PC [31:0] $end
$var wire 1 1 MemWrite $end
$var wire 3 2 ImmSrc [2:0] $end
$var wire 32 3 ImmExt [31:0] $end
$var wire 1 4 ALUSrc $end
$var wire 32 5 ALUResult [31:0] $end
$var wire 3 6 ALUControl [2:0] $end
$scope module add4 $end
$var wire 32 7 out [31:0] $end
$var wire 32 8 A [31:0] $end
$upscope $end
$scope module adder $end
$var wire 32 9 PCTarget [31:0] $end
$var wire 32 : B [31:0] $end
$var wire 32 ; A [31:0] $end
$upscope $end
$scope module alu $end
$var wire 32 < B [31:0] $end
$var wire 3 = ALUControl [2:0] $end
$var wire 32 > A [31:0] $end
$var reg 32 ? out [31:0] $end
$var reg 1 $ zero $end
$upscope $end
$scope module controller $end
$var wire 1 - PCSrc $end
$var wire 1 $ Zero $end
$var wire 3 @ funct3 [2:0] $end
$var wire 1 A funct7 $end
$var wire 7 B op [6:0] $end
$var wire 2 C ResultSrc [1:0] $end
$var wire 1 * RegWrite $end
$var wire 1 1 MemWrite $end
$var wire 1 D Jump $end
$var wire 3 E ImmSrc [2:0] $end
$var wire 1 F Branch $end
$var wire 1 4 ALUSrc $end
$var wire 2 G ALUOp [1:0] $end
$var wire 3 H ALUControl [2:0] $end
$scope module alu_decoder $end
$var wire 3 I funct3 [2:0] $end
$var wire 1 A funct7 $end
$var wire 1 J op5 $end
$var wire 2 K ALUOp [1:0] $end
$var reg 3 L ALUControl [2:0] $end
$upscope $end
$scope module main_decoder $end
$var wire 7 M op [6:0] $end
$var reg 2 N ALUOp [1:0] $end
$var reg 1 4 ALUSrc $end
$var reg 1 F Branch $end
$var reg 3 O ImmSrc [2:0] $end
$var reg 1 D Jump $end
$var reg 1 1 MemWrite $end
$var reg 1 * RegWrite $end
$var reg 2 P ResultSrc [1:0] $end
$upscope $end
$upscope $end
$scope module dm $end
$var wire 32 Q A [31:0] $end
$var wire 32 R RD [31:0] $end
$var wire 1 1 WE $end
$var wire 1 ! clk $end
$var wire 32 S WD [31:0] $end
$upscope $end
$scope module ext $end
$var wire 3 T ImmSrc [2:0] $end
$var wire 25 U instr [31:7] $end
$var reg 32 V ImmExt [31:0] $end
$upscope $end
$scope module im $end
$var wire 32 W A [31:0] $end
$var reg 32 X RD [31:0] $end
$upscope $end
$scope module mux1 $end
$var wire 32 Y a [31:0] $end
$var wire 32 Z b [31:0] $end
$var wire 1 - select $end
$var wire 32 [ out [31:0] $end
$upscope $end
$scope module mux2 $end
$var wire 32 \ a [31:0] $end
$var wire 1 4 select $end
$var wire 32 ] out [31:0] $end
$var wire 32 ^ b [31:0] $end
$upscope $end
$scope module mux3 $end
$var wire 32 _ a [31:0] $end
$var wire 32 ` b [31:0] $end
$var wire 32 a c [31:0] $end
$var wire 32 b d [31:0] $end
$var wire 2 c select [1:0] $end
$var wire 32 d out [31:0] $end
$upscope $end
$scope module pc $end
$var wire 1 ! clk $end
$var wire 32 e pc_in [31:0] $end
$var wire 1 " reset $end
$var reg 32 f pc_out [31:0] $end
$upscope $end
$scope module register $end
$var wire 5 g A1 [4:0] $end
$var wire 5 h A2 [4:0] $end
$var wire 5 i A3 [4:0] $end
$var wire 32 j WD3 [31:0] $end
$var wire 1 * WE3 $end
$var wire 1 ! clk $end
$var reg 32 k RD1 [31:0] $end
$var reg 32 l RD2 [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
xJ
bx I
bx H
bx G
xF
bx E
xD
bx C
bx B
xA
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
x4
bx 3
bx 2
x1
bx 0
bx /
bx .
x-
bx ,
bx +
x*
bx )
bx (
bx '
bx &
bx %
x$
bx #
1"
0!
$end
#5000
b1 )
b1 d
b1 j
b1 5
b1 ?
b1 Q
b1 b
0$
b0 6
b0 =
b0 H
b0 L
b1 &
b1 <
b1 ]
b100 /
b100 [
b100 e
0-
b1 ,
b1 9
b1 Y
b1 3
b1 :
b1 V
b1 \
b1 _
0D
b10 G
b10 K
b10 N
b0 (
b0 C
b0 P
b0 c
b0 2
b0 E
b0 O
b0 T
14
0F
01
1*
b0 '
b0 >
b0 k
0J
b10000000000001 U
b1 i
b1 h
b0 g
0A
b0 @
b0 I
b10011 B
b10011 M
b100000000000010010011 #
b100000000000010010011 X
b100 .
b100 7
b100 Z
b100 `
b0 0
b0 8
b0 ;
b0 W
b0 f
1!
#10000
0!
#15000
b1 %
b1 S
b1 ^
b1 l
1!
#20000
0!
0"
#25000
b10 )
b10 d
b10 j
b10 5
b10 ?
b10 Q
b10 b
b10 &
b10 <
b10 ]
b10 3
b10 :
b10 V
b10 \
b10 _
bx %
bx S
bx ^
bx l
b100000000000010 U
b10 i
b10 h
b1000 /
b1000 [
b1000 e
b1000000000000100010011 #
b1000000000000100010011 X
b110 ,
b110 9
b110 Y
b1000 .
b1000 7
b1000 Z
b1000 `
b100 0
b100 8
b100 ;
b100 W
b100 f
1!
#30000
0!
#35000
b100 )
b100 d
b100 j
b100 5
b100 ?
b100 Q
b100 b
b100 6
b100 =
b100 H
b100 L
bx 2
bx E
bx O
bx T
04
b1 '
b1 >
b1 k
1J
b100000100100011 U
b11 i
b1 g
b1 @
b1 I
b110011 B
b110011 M
b10 %
b10 S
b10 ^
b10 l
b1100 /
b1100 [
b1100 e
b1000001001000110110011 #
b1000001001000110110011 X
b1010 ,
b1010 9
b1010 Y
b1100 .
b1100 7
b1100 Z
b1100 `
b1000 0
b1000 8
b1000 ;
b1000 W
b1000 f
1!
#40000
0!
#45000
b100010001000100010000000000000 )
b100010001000100010000000000000 d
b100010001000100010000000000000 j
b100010001000100010000000000000 &
b100010001000100010000000000000 <
b100010001000100010000000000000 ]
b100010001000100010000000000000 3
b100010001000100010000000000000 :
b100010001000100010000000000000 V
b100010001000100010000000000000 \
b100010001000100010000000000000 _
b0x 5
b0x ?
b0x Q
b0x b
x$
b101 6
b101 =
b101 H
b101 L
b11 (
b11 C
b11 P
b11 c
b100 2
b100 E
b100 O
b100 T
bx G
bx K
bx N
14
bx '
bx >
bx k
b10001000100010001000100 U
b100 i
b100 g
b10 @
b10 I
b110111 B
b110111 M
b10000 /
b10000 [
b10000 e
b100010001000100010001000110111 #
b100010001000100010001000110111 X
b100010001000100010000000001100 ,
b100010001000100010000000001100 9
b100010001000100010000000001100 Y
b10000 .
b10000 7
b10000 Z
b10000 `
b1100 0
b1100 8
b1100 ;
b1100 W
b1100 f
1!
#50000
0!
#55000
b0x 5
b0x ?
b0x Q
b0x b
x$
bx000000000000 )
bx000000000000 d
bx000000000000 j
bx000000000000 &
bx000000000000 <
bx000000000000 ]
bx000000000000 3
bx000000000000 :
bx000000000000 V
bx000000000000 \
bx000000000000 _
bx %
bx S
bx ^
bx l
xJ
bx U
bx i
bx h
bx g
xA
bx @
bx I
bx B
bx M
bx '
bx >
bx k
b10100 /
b10100 [
b10100 e
bx #
bx X
bx ,
bx 9
bx Y
b10100 .
b10100 7
b10100 Z
b10100 `
b10000 0
b10000 8
b10000 ;
b10000 W
b10000 f
1!
#60000
0!
#65000
b11000 /
b11000 [
b11000 e
b11000 .
b11000 7
b11000 Z
b11000 `
b10100 0
b10100 8
b10100 ;
b10100 W
b10100 f
1!
#70000
0!
#75000
b11100 /
b11100 [
b11100 e
b11100 .
b11100 7
b11100 Z
b11100 `
b11000 0
b11000 8
b11000 ;
b11000 W
b11000 f
1!
#80000
0!
#85000
b100000 /
b100000 [
b100000 e
b100000 .
b100000 7
b100000 Z
b100000 `
b11100 0
b11100 8
b11100 ;
b11100 W
b11100 f
1!
#90000
0!
#95000
b100100 /
b100100 [
b100100 e
b100100 .
b100100 7
b100100 Z
b100100 `
b100000 0
b100000 8
b100000 ;
b100000 W
b100000 f
1!
#100000
0!
#105000
b101000 /
b101000 [
b101000 e
b101000 .
b101000 7
b101000 Z
b101000 `
b100100 0
b100100 8
b100100 ;
b100100 W
b100100 f
1!
#110000
0!
#115000
b101100 /
b101100 [
b101100 e
b101100 .
b101100 7
b101100 Z
b101100 `
b101000 0
b101000 8
b101000 ;
b101000 W
b101000 f
1!
#120000
0!
#125000
b110000 /
b110000 [
b110000 e
b110000 .
b110000 7
b110000 Z
b110000 `
b101100 0
b101100 8
b101100 ;
b101100 W
b101100 f
1!
#130000
0!
#135000
b110100 /
b110100 [
b110100 e
b110100 .
b110100 7
b110100 Z
b110100 `
b110000 0
b110000 8
b110000 ;
b110000 W
b110000 f
1!
#140000
0!
#145000
b111000 /
b111000 [
b111000 e
b111000 .
b111000 7
b111000 Z
b111000 `
b110100 0
b110100 8
b110100 ;
b110100 W
b110100 f
1!
#150000
0!
#155000
b111100 /
b111100 [
b111100 e
b111100 .
b111100 7
b111100 Z
b111100 `
b111000 0
b111000 8
b111000 ;
b111000 W
b111000 f
1!
#160000
0!
#165000
b1000000 /
b1000000 [
b1000000 e
b1000000 .
b1000000 7
b1000000 Z
b1000000 `
b111100 0
b111100 8
b111100 ;
b111100 W
b111100 f
1!
#170000
0!
#175000
b1000100 /
b1000100 [
b1000100 e
b1000100 .
b1000100 7
b1000100 Z
b1000100 `
b1000000 0
b1000000 8
b1000000 ;
b1000000 W
b1000000 f
1!
#180000
0!
#185000
b1001000 /
b1001000 [
b1001000 e
b1001000 .
b1001000 7
b1001000 Z
b1001000 `
b1000100 0
b1000100 8
b1000100 ;
b1000100 W
b1000100 f
1!
#190000
0!
#195000
b1001100 /
b1001100 [
b1001100 e
b1001100 .
b1001100 7
b1001100 Z
b1001100 `
b1001000 0
b1001000 8
b1001000 ;
b1001000 W
b1001000 f
1!
#200000
0!
#205000
b1010000 /
b1010000 [
b1010000 e
b1010000 .
b1010000 7
b1010000 Z
b1010000 `
b1001100 0
b1001100 8
b1001100 ;
b1001100 W
b1001100 f
1!
#210000
0!
#215000
b1010100 /
b1010100 [
b1010100 e
b1010100 .
b1010100 7
b1010100 Z
b1010100 `
b1010000 0
b1010000 8
b1010000 ;
b1010000 W
b1010000 f
1!
#220000
0!
#225000
b1011000 /
b1011000 [
b1011000 e
b1011000 .
b1011000 7
b1011000 Z
b1011000 `
b1010100 0
b1010100 8
b1010100 ;
b1010100 W
b1010100 f
1!
#230000
0!
#235000
b1011100 /
b1011100 [
b1011100 e
b1011100 .
b1011100 7
b1011100 Z
b1011100 `
b1011000 0
b1011000 8
b1011000 ;
b1011000 W
b1011000 f
1!
#240000
0!
#245000
b1100000 /
b1100000 [
b1100000 e
b1100000 .
b1100000 7
b1100000 Z
b1100000 `
b1011100 0
b1011100 8
b1011100 ;
b1011100 W
b1011100 f
1!
#250000
0!
#255000
b1100100 /
b1100100 [
b1100100 e
b1100100 .
b1100100 7
b1100100 Z
b1100100 `
b1100000 0
b1100000 8
b1100000 ;
b1100000 W
b1100000 f
1!
#260000
0!
#265000
b1101000 /
b1101000 [
b1101000 e
b1101000 .
b1101000 7
b1101000 Z
b1101000 `
b1100100 0
b1100100 8
b1100100 ;
b1100100 W
b1100100 f
1!
#270000
0!
#275000
b1101100 /
b1101100 [
b1101100 e
b1101100 .
b1101100 7
b1101100 Z
b1101100 `
b1101000 0
b1101000 8
b1101000 ;
b1101000 W
b1101000 f
1!
#280000
0!
#285000
b1110000 /
b1110000 [
b1110000 e
b1110000 .
b1110000 7
b1110000 Z
b1110000 `
b1101100 0
b1101100 8
b1101100 ;
b1101100 W
b1101100 f
1!
#290000
0!
#295000
b1110100 /
b1110100 [
b1110100 e
b1110100 .
b1110100 7
b1110100 Z
b1110100 `
b1110000 0
b1110000 8
b1110000 ;
b1110000 W
b1110000 f
1!
#300000
0!
#305000
b1111000 /
b1111000 [
b1111000 e
b1111000 .
b1111000 7
b1111000 Z
b1111000 `
b1110100 0
b1110100 8
b1110100 ;
b1110100 W
b1110100 f
1!
#310000
0!
#315000
b1111100 /
b1111100 [
b1111100 e
b1111100 .
b1111100 7
b1111100 Z
b1111100 `
b1111000 0
b1111000 8
b1111000 ;
b1111000 W
b1111000 f
1!
#320000
0!
#325000
b10000000 /
b10000000 [
b10000000 e
b10000000 .
b10000000 7
b10000000 Z
b10000000 `
b1111100 0
b1111100 8
b1111100 ;
b1111100 W
b1111100 f
1!
#330000
0!
#335000
b10000100 /
b10000100 [
b10000100 e
b10000100 .
b10000100 7
b10000100 Z
b10000100 `
b10000000 0
b10000000 8
b10000000 ;
b10000000 W
b10000000 f
1!
#340000
0!
#345000
b10001000 /
b10001000 [
b10001000 e
b10001000 .
b10001000 7
b10001000 Z
b10001000 `
b10000100 0
b10000100 8
b10000100 ;
b10000100 W
b10000100 f
1!
#350000
0!
#355000
b10001100 /
b10001100 [
b10001100 e
b10001100 .
b10001100 7
b10001100 Z
b10001100 `
b10001000 0
b10001000 8
b10001000 ;
b10001000 W
b10001000 f
1!
#360000
0!
#365000
b10010000 /
b10010000 [
b10010000 e
b10010000 .
b10010000 7
b10010000 Z
b10010000 `
b10001100 0
b10001100 8
b10001100 ;
b10001100 W
b10001100 f
1!
#370000
0!
#375000
b10010100 /
b10010100 [
b10010100 e
b10010100 .
b10010100 7
b10010100 Z
b10010100 `
b10010000 0
b10010000 8
b10010000 ;
b10010000 W
b10010000 f
1!
#380000
0!
#385000
b10011000 /
b10011000 [
b10011000 e
b10011000 .
b10011000 7
b10011000 Z
b10011000 `
b10010100 0
b10010100 8
b10010100 ;
b10010100 W
b10010100 f
1!
#390000
0!
#395000
b10011100 /
b10011100 [
b10011100 e
b10011100 .
b10011100 7
b10011100 Z
b10011100 `
b10011000 0
b10011000 8
b10011000 ;
b10011000 W
b10011000 f
1!
#400000
0!
#405000
b10100000 /
b10100000 [
b10100000 e
b10100000 .
b10100000 7
b10100000 Z
b10100000 `
b10011100 0
b10011100 8
b10011100 ;
b10011100 W
b10011100 f
1!
#410000
0!
#415000
b10100100 /
b10100100 [
b10100100 e
b10100100 .
b10100100 7
b10100100 Z
b10100100 `
b10100000 0
b10100000 8
b10100000 ;
b10100000 W
b10100000 f
1!
#420000
0!
#425000
b10101000 /
b10101000 [
b10101000 e
b10101000 .
b10101000 7
b10101000 Z
b10101000 `
b10100100 0
b10100100 8
b10100100 ;
b10100100 W
b10100100 f
1!
#430000
0!
#435000
b10101100 /
b10101100 [
b10101100 e
b10101100 .
b10101100 7
b10101100 Z
b10101100 `
b10101000 0
b10101000 8
b10101000 ;
b10101000 W
b10101000 f
1!
#440000
0!
#445000
b10110000 /
b10110000 [
b10110000 e
b10110000 .
b10110000 7
b10110000 Z
b10110000 `
b10101100 0
b10101100 8
b10101100 ;
b10101100 W
b10101100 f
1!
#450000
0!
#455000
b10110100 /
b10110100 [
b10110100 e
b10110100 .
b10110100 7
b10110100 Z
b10110100 `
b10110000 0
b10110000 8
b10110000 ;
b10110000 W
b10110000 f
1!
#460000
0!
#465000
b10111000 /
b10111000 [
b10111000 e
b10111000 .
b10111000 7
b10111000 Z
b10111000 `
b10110100 0
b10110100 8
b10110100 ;
b10110100 W
b10110100 f
1!
#470000
0!
#475000
b10111100 /
b10111100 [
b10111100 e
b10111100 .
b10111100 7
b10111100 Z
b10111100 `
b10111000 0
b10111000 8
b10111000 ;
b10111000 W
b10111000 f
1!
#480000
0!
#485000
b11000000 /
b11000000 [
b11000000 e
b11000000 .
b11000000 7
b11000000 Z
b11000000 `
b10111100 0
b10111100 8
b10111100 ;
b10111100 W
b10111100 f
1!
#490000
0!
#495000
b11000100 /
b11000100 [
b11000100 e
b11000100 .
b11000100 7
b11000100 Z
b11000100 `
b11000000 0
b11000000 8
b11000000 ;
b11000000 W
b11000000 f
1!
#500000
0!
#505000
b11001000 /
b11001000 [
b11001000 e
b11001000 .
b11001000 7
b11001000 Z
b11001000 `
b11000100 0
b11000100 8
b11000100 ;
b11000100 W
b11000100 f
1!
#510000
0!
#515000
b11001100 /
b11001100 [
b11001100 e
b11001100 .
b11001100 7
b11001100 Z
b11001100 `
b11001000 0
b11001000 8
b11001000 ;
b11001000 W
b11001000 f
1!
#520000
0!
#525000
b11010000 /
b11010000 [
b11010000 e
b11010000 .
b11010000 7
b11010000 Z
b11010000 `
b11001100 0
b11001100 8
b11001100 ;
b11001100 W
b11001100 f
1!
#530000
0!
#535000
b11010100 /
b11010100 [
b11010100 e
b11010100 .
b11010100 7
b11010100 Z
b11010100 `
b11010000 0
b11010000 8
b11010000 ;
b11010000 W
b11010000 f
1!
#540000
0!
#545000
b11011000 /
b11011000 [
b11011000 e
b11011000 .
b11011000 7
b11011000 Z
b11011000 `
b11010100 0
b11010100 8
b11010100 ;
b11010100 W
b11010100 f
1!
#550000
0!
#555000
b11011100 /
b11011100 [
b11011100 e
b11011100 .
b11011100 7
b11011100 Z
b11011100 `
b11011000 0
b11011000 8
b11011000 ;
b11011000 W
b11011000 f
1!
#560000
0!
#565000
b11100000 /
b11100000 [
b11100000 e
b11100000 .
b11100000 7
b11100000 Z
b11100000 `
b11011100 0
b11011100 8
b11011100 ;
b11011100 W
b11011100 f
1!
#570000
0!
#575000
b11100100 /
b11100100 [
b11100100 e
b11100100 .
b11100100 7
b11100100 Z
b11100100 `
b11100000 0
b11100000 8
b11100000 ;
b11100000 W
b11100000 f
1!
#580000
0!
#585000
b11101000 /
b11101000 [
b11101000 e
b11101000 .
b11101000 7
b11101000 Z
b11101000 `
b11100100 0
b11100100 8
b11100100 ;
b11100100 W
b11100100 f
1!
#590000
0!
#595000
b11101100 /
b11101100 [
b11101100 e
b11101100 .
b11101100 7
b11101100 Z
b11101100 `
b11101000 0
b11101000 8
b11101000 ;
b11101000 W
b11101000 f
1!
#600000
0!
#605000
b11110000 /
b11110000 [
b11110000 e
b11110000 .
b11110000 7
b11110000 Z
b11110000 `
b11101100 0
b11101100 8
b11101100 ;
b11101100 W
b11101100 f
1!
#610000
0!
#615000
b11110100 /
b11110100 [
b11110100 e
b11110100 .
b11110100 7
b11110100 Z
b11110100 `
b11110000 0
b11110000 8
b11110000 ;
b11110000 W
b11110000 f
1!
#620000
0!
